// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should mount with merchants bids 1`] = `
<WithStyles(Paper)
  className="Connect-MerchantTable--root-1"
>
  <label
    htmlFor="raised-button-file"
  >
    Click here to create Merchant
    <WithStyles(Button)
      className="Connect-MerchantTable--button-3"
      onClick={[Function]}
      raised={true}
    >
      Create Merchant
    </WithStyles(Button)>
  </label>
  <WithStyles(EditMerchantDetailsModal)
    handleBidsChange={[Function]}
    handleCloseModal={[Function]}
    handleEditFormChange={[Function]}
    handleEditFormSubmit={[Function]}
    props={
      Object {
        "addMerchantSubmit": [Function],
        "classes": Object {
          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
          "button": "Connect-MerchantTable--button-3",
          "root": "Connect-MerchantTable--root-1",
          "table": "Connect-MerchantTable--table-2",
        },
        "deleteMerchant": [Function],
        "displayBids": Array [],
        "editMerchant": [Function],
        "editMerchantSubmit": [Function],
        "merchantFormData": Object {
          "avatarUrl": "",
          "bids": Array [],
          "email": "",
          "firstName": "",
          "hasPremium": false,
          "id": "",
          "lastName": "",
          "phone": "",
        },
        "merchants": Array [
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [
              Object {
                "amount": 1,
                "carTitle": "title",
                "created": "01/01/01",
                "id": "1",
              },
              Object {
                "amount": 2,
                "carTitle": "title2",
                "created": "02/02/02",
                "id": "2",
              },
            ],
            "email": "test11@test.com",
            "firstName": "test11",
            "hasPremium": true,
            "id": "0",
            "lastName": "test12",
            "phone": 1234567891,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test22@test.com",
            "firstName": "test21",
            "hasPremium": true,
            "id": "1",
            "lastName": "test22",
            "phone": 1234567892,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test33@test.com",
            "firstName": "test31",
            "hasPremium": false,
            "id": "2",
            "lastName": "test32",
            "phone": 1234567893,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test44@test.com",
            "firstName": "test41",
            "hasPremium": true,
            "id": "3",
            "lastName": "test42",
            "phone": 1234567894,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test55@test.com",
            "firstName": "test51",
            "hasPremium": false,
            "id": "4",
            "lastName": "test52",
            "phone": 1234567895,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test11@test.com",
            "firstName": "test11",
            "hasPremium": true,
            "id": "5",
            "lastName": "test12",
            "phone": 1234567891,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test22@test.com",
            "firstName": "test21",
            "hasPremium": true,
            "id": "6",
            "lastName": "test22",
            "phone": 1234567892,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test33@test.com",
            "firstName": "test31",
            "hasPremium": false,
            "id": "7",
            "lastName": "test32",
            "phone": 1234567893,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test44@test.com",
            "firstName": "test41",
            "hasPremium": true,
            "id": "8",
            "lastName": "test42",
            "phone": 1234567894,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test55@test.com",
            "firstName": "test51",
            "hasPremium": false,
            "id": "9",
            "lastName": "test52",
            "phone": 1234567895,
          },
        ],
        "modifyBids": [Function],
        "selectMerchant": [Function],
        "sortBids": [Function],
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": null,
        },
      }
    }
    state={
      Object {
        "error": Object {
          "editForm": Object {
            "Id": false,
            "IdMessage": "",
          },
        },
        "merchantRowData": Object {},
        "openDeleteModal": false,
        "openEditModal": false,
        "page": 0,
        "rowsPerPage": 5,
      }
    }
  />
  <DeleteMerchantDetailsModal
    handleCloseModal={[Function]}
    handleDeleteModalData={[Function]}
    state={
      Object {
        "error": Object {
          "editForm": Object {
            "Id": false,
            "IdMessage": "",
          },
        },
        "merchantRowData": Object {},
        "openDeleteModal": false,
        "openEditModal": false,
        "page": 0,
        "rowsPerPage": 5,
      }
    }
  />
  <Component
    classes={
      Object {
        "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
        "button": "Connect-MerchantTable--button-3",
        "root": "Connect-MerchantTable--root-1",
        "table": "Connect-MerchantTable--table-2",
      }
    }
    handleChangePage={[Function]}
    handleChangeRowsPerPage={[Function]}
    merchants={
      Array [
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [
            Object {
              "amount": 1,
              "carTitle": "title",
              "created": "01/01/01",
              "id": "1",
            },
            Object {
              "amount": 2,
              "carTitle": "title2",
              "created": "02/02/02",
              "id": "2",
            },
          ],
          "email": "test11@test.com",
          "firstName": "test11",
          "hasPremium": true,
          "id": "0",
          "lastName": "test12",
          "phone": 1234567891,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test22@test.com",
          "firstName": "test21",
          "hasPremium": true,
          "id": "1",
          "lastName": "test22",
          "phone": 1234567892,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test33@test.com",
          "firstName": "test31",
          "hasPremium": false,
          "id": "2",
          "lastName": "test32",
          "phone": 1234567893,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test44@test.com",
          "firstName": "test41",
          "hasPremium": true,
          "id": "3",
          "lastName": "test42",
          "phone": 1234567894,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test55@test.com",
          "firstName": "test51",
          "hasPremium": false,
          "id": "4",
          "lastName": "test52",
          "phone": 1234567895,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test11@test.com",
          "firstName": "test11",
          "hasPremium": true,
          "id": "5",
          "lastName": "test12",
          "phone": 1234567891,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test22@test.com",
          "firstName": "test21",
          "hasPremium": true,
          "id": "6",
          "lastName": "test22",
          "phone": 1234567892,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test33@test.com",
          "firstName": "test31",
          "hasPremium": false,
          "id": "7",
          "lastName": "test32",
          "phone": 1234567893,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test44@test.com",
          "firstName": "test41",
          "hasPremium": true,
          "id": "8",
          "lastName": "test42",
          "phone": 1234567894,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test55@test.com",
          "firstName": "test51",
          "hasPremium": false,
          "id": "9",
          "lastName": "test52",
          "phone": 1234567895,
        },
      ]
    }
    page={0}
    rowsPerPage={5}
    sortBids={[Function]}
    toggleDeleteModal={[Function]}
    toggleEditModal={[Function]}
  />
</WithStyles(Paper)>
`;

exports[`should shallow mount and match matchsnapshot MerchantTable 1`] = `
<Connect(MerchantTable)
  classes={
    Object {
      "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
      "button": "Connect-MerchantTable--button-3",
      "root": "Connect-MerchantTable--root-1",
      "table": "Connect-MerchantTable--table-2",
    }
  }
  merchants={
    Array [
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [
          Object {
            "amount": 1,
            "carTitle": "title",
            "created": "01/01/01",
            "id": "1",
          },
          Object {
            "amount": 2,
            "carTitle": "title2",
            "created": "02/02/02",
            "id": "2",
          },
        ],
        "email": "test11@test.com",
        "firstName": "test11",
        "hasPremium": true,
        "id": "0",
        "lastName": "test12",
        "phone": 1234567891,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test22@test.com",
        "firstName": "test21",
        "hasPremium": true,
        "id": "1",
        "lastName": "test22",
        "phone": 1234567892,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test33@test.com",
        "firstName": "test31",
        "hasPremium": false,
        "id": "2",
        "lastName": "test32",
        "phone": 1234567893,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test44@test.com",
        "firstName": "test41",
        "hasPremium": true,
        "id": "3",
        "lastName": "test42",
        "phone": 1234567894,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test55@test.com",
        "firstName": "test51",
        "hasPremium": false,
        "id": "4",
        "lastName": "test52",
        "phone": 1234567895,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test11@test.com",
        "firstName": "test11",
        "hasPremium": true,
        "id": "5",
        "lastName": "test12",
        "phone": 1234567891,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test22@test.com",
        "firstName": "test21",
        "hasPremium": true,
        "id": "6",
        "lastName": "test22",
        "phone": 1234567892,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test33@test.com",
        "firstName": "test31",
        "hasPremium": false,
        "id": "7",
        "lastName": "test32",
        "phone": 1234567893,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test44@test.com",
        "firstName": "test41",
        "hasPremium": true,
        "id": "8",
        "lastName": "test42",
        "phone": 1234567894,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test55@test.com",
        "firstName": "test51",
        "hasPremium": false,
        "id": "9",
        "lastName": "test52",
        "phone": 1234567895,
      },
    ]
  }
/>
`;

exports[`should shallow mount with no merchants bids 1`] = `
<WithStyles(Connect(MerchantTable))
  merchants={
    Array [
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [
          Object {
            "amount": 1,
            "carTitle": "title",
            "created": "01/01/01",
            "id": "1",
          },
          Object {
            "amount": 2,
            "carTitle": "title2",
            "created": "02/02/02",
            "id": "2",
          },
        ],
        "email": "test11@test.com",
        "firstName": "test11",
        "hasPremium": true,
        "id": "0",
        "lastName": "test12",
        "phone": 1234567891,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test22@test.com",
        "firstName": "test21",
        "hasPremium": true,
        "id": "1",
        "lastName": "test22",
        "phone": 1234567892,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test33@test.com",
        "firstName": "test31",
        "hasPremium": false,
        "id": "2",
        "lastName": "test32",
        "phone": 1234567893,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test44@test.com",
        "firstName": "test41",
        "hasPremium": true,
        "id": "3",
        "lastName": "test42",
        "phone": 1234567894,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test55@test.com",
        "firstName": "test51",
        "hasPremium": false,
        "id": "4",
        "lastName": "test52",
        "phone": 1234567895,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test11@test.com",
        "firstName": "test11",
        "hasPremium": true,
        "id": "5",
        "lastName": "test12",
        "phone": 1234567891,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test22@test.com",
        "firstName": "test21",
        "hasPremium": true,
        "id": "6",
        "lastName": "test22",
        "phone": 1234567892,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test33@test.com",
        "firstName": "test31",
        "hasPremium": false,
        "id": "7",
        "lastName": "test32",
        "phone": 1234567893,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test44@test.com",
        "firstName": "test41",
        "hasPremium": true,
        "id": "8",
        "lastName": "test42",
        "phone": 1234567894,
      },
      Object {
        "avatarUrl": "www.google.com",
        "bids": Array [],
        "email": "test55@test.com",
        "firstName": "test51",
        "hasPremium": false,
        "id": "9",
        "lastName": "test52",
        "phone": 1234567895,
      },
    ]
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(MerchantTable)
    classes={
      Object {
        "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
        "button": "Connect-MerchantTable--button-3",
        "root": "Connect-MerchantTable--root-1",
        "table": "Connect-MerchantTable--table-2",
      }
    }
    merchants={
      Array [
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [
            Object {
              "amount": 1,
              "carTitle": "title",
              "created": "01/01/01",
              "id": "1",
            },
            Object {
              "amount": 2,
              "carTitle": "title2",
              "created": "02/02/02",
              "id": "2",
            },
          ],
          "email": "test11@test.com",
          "firstName": "test11",
          "hasPremium": true,
          "id": "0",
          "lastName": "test12",
          "phone": 1234567891,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test22@test.com",
          "firstName": "test21",
          "hasPremium": true,
          "id": "1",
          "lastName": "test22",
          "phone": 1234567892,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test33@test.com",
          "firstName": "test31",
          "hasPremium": false,
          "id": "2",
          "lastName": "test32",
          "phone": 1234567893,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test44@test.com",
          "firstName": "test41",
          "hasPremium": true,
          "id": "3",
          "lastName": "test42",
          "phone": 1234567894,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test55@test.com",
          "firstName": "test51",
          "hasPremium": false,
          "id": "4",
          "lastName": "test52",
          "phone": 1234567895,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test11@test.com",
          "firstName": "test11",
          "hasPremium": true,
          "id": "5",
          "lastName": "test12",
          "phone": 1234567891,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test22@test.com",
          "firstName": "test21",
          "hasPremium": true,
          "id": "6",
          "lastName": "test22",
          "phone": 1234567892,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test33@test.com",
          "firstName": "test31",
          "hasPremium": false,
          "id": "7",
          "lastName": "test32",
          "phone": 1234567893,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test44@test.com",
          "firstName": "test41",
          "hasPremium": true,
          "id": "8",
          "lastName": "test42",
          "phone": 1234567894,
        },
        Object {
          "avatarUrl": "www.google.com",
          "bids": Array [],
          "email": "test55@test.com",
          "firstName": "test51",
          "hasPremium": false,
          "id": "9",
          "lastName": "test52",
          "phone": 1234567895,
        },
      ]
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <MerchantTable
      addMerchantSubmit={[Function]}
      classes={
        Object {
          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
          "button": "Connect-MerchantTable--button-3",
          "root": "Connect-MerchantTable--root-1",
          "table": "Connect-MerchantTable--table-2",
        }
      }
      deleteMerchant={[Function]}
      displayBids={Array []}
      editMerchant={[Function]}
      editMerchantSubmit={[Function]}
      merchantFormData={
        Object {
          "avatarUrl": "",
          "bids": Array [],
          "email": "",
          "firstName": "",
          "hasPremium": false,
          "id": "",
          "lastName": "",
          "phone": "",
        }
      }
      merchants={
        Array [
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [
              Object {
                "amount": 1,
                "carTitle": "title",
                "created": "01/01/01",
                "id": "1",
              },
              Object {
                "amount": 2,
                "carTitle": "title2",
                "created": "02/02/02",
                "id": "2",
              },
            ],
            "email": "test11@test.com",
            "firstName": "test11",
            "hasPremium": true,
            "id": "0",
            "lastName": "test12",
            "phone": 1234567891,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test22@test.com",
            "firstName": "test21",
            "hasPremium": true,
            "id": "1",
            "lastName": "test22",
            "phone": 1234567892,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test33@test.com",
            "firstName": "test31",
            "hasPremium": false,
            "id": "2",
            "lastName": "test32",
            "phone": 1234567893,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test44@test.com",
            "firstName": "test41",
            "hasPremium": true,
            "id": "3",
            "lastName": "test42",
            "phone": 1234567894,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test55@test.com",
            "firstName": "test51",
            "hasPremium": false,
            "id": "4",
            "lastName": "test52",
            "phone": 1234567895,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test11@test.com",
            "firstName": "test11",
            "hasPremium": true,
            "id": "5",
            "lastName": "test12",
            "phone": 1234567891,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test22@test.com",
            "firstName": "test21",
            "hasPremium": true,
            "id": "6",
            "lastName": "test22",
            "phone": 1234567892,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test33@test.com",
            "firstName": "test31",
            "hasPremium": false,
            "id": "7",
            "lastName": "test32",
            "phone": 1234567893,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test44@test.com",
            "firstName": "test41",
            "hasPremium": true,
            "id": "8",
            "lastName": "test42",
            "phone": 1234567894,
          },
          Object {
            "avatarUrl": "www.google.com",
            "bids": Array [],
            "email": "test55@test.com",
            "firstName": "test51",
            "hasPremium": false,
            "id": "9",
            "lastName": "test52",
            "phone": 1234567895,
          },
        ]
      }
      modifyBids={[Function]}
      selectMerchant={[Function]}
      sortBids={[Function]}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
      storeSubscription={
        Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        }
      }
    >
      <WithStyles(Paper)
        className="Connect-MerchantTable--root-1"
      >
        <Paper
          className="Connect-MerchantTable--root-1"
          classes={
            Object {
              "root": "MuiPaper-root-5",
              "rounded": "MuiPaper-rounded-6",
              "shadow0": "MuiPaper-shadow0-7",
              "shadow1": "MuiPaper-shadow1-8",
              "shadow10": "MuiPaper-shadow10-17",
              "shadow11": "MuiPaper-shadow11-18",
              "shadow12": "MuiPaper-shadow12-19",
              "shadow13": "MuiPaper-shadow13-20",
              "shadow14": "MuiPaper-shadow14-21",
              "shadow15": "MuiPaper-shadow15-22",
              "shadow16": "MuiPaper-shadow16-23",
              "shadow17": "MuiPaper-shadow17-24",
              "shadow18": "MuiPaper-shadow18-25",
              "shadow19": "MuiPaper-shadow19-26",
              "shadow2": "MuiPaper-shadow2-9",
              "shadow20": "MuiPaper-shadow20-27",
              "shadow21": "MuiPaper-shadow21-28",
              "shadow22": "MuiPaper-shadow22-29",
              "shadow23": "MuiPaper-shadow23-30",
              "shadow24": "MuiPaper-shadow24-31",
              "shadow3": "MuiPaper-shadow3-10",
              "shadow4": "MuiPaper-shadow4-11",
              "shadow5": "MuiPaper-shadow5-12",
              "shadow6": "MuiPaper-shadow6-13",
              "shadow7": "MuiPaper-shadow7-14",
              "shadow8": "MuiPaper-shadow8-15",
              "shadow9": "MuiPaper-shadow9-16",
            }
          }
          component="div"
          elevation={2}
          square={false}
        >
          <div
            className="MuiPaper-root-5 MuiPaper-shadow2-9 MuiPaper-rounded-6 Connect-MerchantTable--root-1"
          >
            <label
              htmlFor="raised-button-file"
            >
              Click here to create Merchant
              <WithStyles(Button)
                className="Connect-MerchantTable--button-3"
                onClick={[Function]}
                raised={true}
              >
                <Button
                  className="Connect-MerchantTable--button-3"
                  classes={
                    Object {
                      "colorInherit": "MuiButton-colorInherit-38",
                      "dense": "MuiButton-dense-33",
                      "disabled": "MuiButton-disabled-44",
                      "fab": "MuiButton-fab-45",
                      "flatAccent": "MuiButton-flatAccent-36",
                      "flatContrast": "MuiButton-flatContrast-37",
                      "flatPrimary": "MuiButton-flatPrimary-35",
                      "fullWidth": "MuiButton-fullWidth-47",
                      "keyboardFocused": "MuiButton-keyboardFocused-40",
                      "label": "MuiButton-label-34",
                      "mini": "MuiButton-mini-46",
                      "raised": "MuiButton-raised-39",
                      "raisedAccent": "MuiButton-raisedAccent-42",
                      "raisedContrast": "MuiButton-raisedContrast-43",
                      "raisedPrimary": "MuiButton-raisedPrimary-41",
                      "root": "MuiButton-root-32",
                    }
                  }
                  color="default"
                  dense={false}
                  disableFocusRipple={false}
                  disableRipple={false}
                  disabled={false}
                  fab={false}
                  fullWidth={false}
                  mini={false}
                  onClick={[Function]}
                  raised={true}
                  type="button"
                >
                  <WithStyles(ButtonBase)
                    className="MuiButton-root-32 MuiButton-raised-39 Connect-MerchantTable--button-3"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    keyboardFocusedClassName="MuiButton-keyboardFocused-40"
                    onClick={[Function]}
                    type="button"
                  >
                    <ButtonBase
                      centerRipple={false}
                      className="MuiButton-root-32 MuiButton-raised-39 Connect-MerchantTable--button-3"
                      classes={
                        Object {
                          "disabled": "MuiButtonBase-disabled-49",
                          "root": "MuiButtonBase-root-48",
                        }
                      }
                      disableRipple={false}
                      disabled={false}
                      focusRipple={true}
                      keyboardFocusedClassName="MuiButton-keyboardFocused-40"
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <button
                        className="MuiButtonBase-root-48 MuiButton-root-32 MuiButton-raised-39 Connect-MerchantTable--button-3"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        role="button"
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiButton-label-34"
                        >
                          Create Merchant
                        </span>
                        <WithStyles(TouchRipple)
                          center={false}
                          innerRef={[Function]}
                        >
                          <TouchRipple
                            center={false}
                            classes={
                              Object {
                                "ripple": "MuiTouchRipple-ripple-54",
                                "rippleFast": "MuiTouchRipple-rippleFast-56",
                                "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                "root": "MuiTouchRipple-root-50",
                                "wrapper": "MuiTouchRipple-wrapper-51",
                                "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                              }
                            }
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              className="MuiTouchRipple-root-50"
                              component="span"
                              enter={true}
                              exit={true}
                            >
                              <span
                                className="MuiTouchRipple-root-50"
                              />
                            </TransitionGroup>
                          </TouchRipple>
                        </WithStyles(TouchRipple)>
                      </button>
                    </ButtonBase>
                  </WithStyles(ButtonBase)>
                </Button>
              </WithStyles(Button)>
            </label>
            <WithStyles(EditMerchantDetailsModal)
              handleBidsChange={[Function]}
              handleCloseModal={[Function]}
              handleEditFormChange={[Function]}
              handleEditFormSubmit={[Function]}
              props={
                Object {
                  "addMerchantSubmit": [Function],
                  "classes": Object {
                    "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                    "button": "Connect-MerchantTable--button-3",
                    "root": "Connect-MerchantTable--root-1",
                    "table": "Connect-MerchantTable--table-2",
                  },
                  "deleteMerchant": [Function],
                  "displayBids": Array [],
                  "editMerchant": [Function],
                  "editMerchantSubmit": [Function],
                  "merchantFormData": Object {
                    "avatarUrl": "",
                    "bids": Array [],
                    "email": "",
                    "firstName": "",
                    "hasPremium": false,
                    "id": "",
                    "lastName": "",
                    "phone": "",
                  },
                  "merchants": Array [
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [
                        Object {
                          "amount": 1,
                          "carTitle": "title",
                          "created": "01/01/01",
                          "id": "1",
                        },
                        Object {
                          "amount": 2,
                          "carTitle": "title2",
                          "created": "02/02/02",
                          "id": "2",
                        },
                      ],
                      "email": "test11@test.com",
                      "firstName": "test11",
                      "hasPremium": true,
                      "id": "0",
                      "lastName": "test12",
                      "phone": 1234567891,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test22@test.com",
                      "firstName": "test21",
                      "hasPremium": true,
                      "id": "1",
                      "lastName": "test22",
                      "phone": 1234567892,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test33@test.com",
                      "firstName": "test31",
                      "hasPremium": false,
                      "id": "2",
                      "lastName": "test32",
                      "phone": 1234567893,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test44@test.com",
                      "firstName": "test41",
                      "hasPremium": true,
                      "id": "3",
                      "lastName": "test42",
                      "phone": 1234567894,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test55@test.com",
                      "firstName": "test51",
                      "hasPremium": false,
                      "id": "4",
                      "lastName": "test52",
                      "phone": 1234567895,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test11@test.com",
                      "firstName": "test11",
                      "hasPremium": true,
                      "id": "5",
                      "lastName": "test12",
                      "phone": 1234567891,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test22@test.com",
                      "firstName": "test21",
                      "hasPremium": true,
                      "id": "6",
                      "lastName": "test22",
                      "phone": 1234567892,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test33@test.com",
                      "firstName": "test31",
                      "hasPremium": false,
                      "id": "7",
                      "lastName": "test32",
                      "phone": 1234567893,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test44@test.com",
                      "firstName": "test41",
                      "hasPremium": true,
                      "id": "8",
                      "lastName": "test42",
                      "phone": 1234567894,
                    },
                    Object {
                      "avatarUrl": "www.google.com",
                      "bids": Array [],
                      "email": "test55@test.com",
                      "firstName": "test51",
                      "hasPremium": false,
                      "id": "9",
                      "lastName": "test52",
                      "phone": 1234567895,
                    },
                  ],
                  "modifyBids": [Function],
                  "selectMerchant": [Function],
                  "sortBids": [Function],
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                }
              }
              state={
                Object {
                  "error": Object {
                    "editForm": Object {
                      "Id": false,
                      "IdMessage": "",
                    },
                  },
                  "merchantRowData": Object {},
                  "openDeleteModal": false,
                  "openEditModal": false,
                  "page": 0,
                  "rowsPerPage": 5,
                }
              }
            >
              <EditMerchantDetailsModal
                classes={
                  Object {
                    "button": "EditMerchantDetailsModal-button-59",
                    "container": "EditMerchantDetailsModal-container-58",
                    "root": "EditMerchantDetailsModal-root-57",
                    "textInput": "EditMerchantDetailsModal-textInput-60",
                  }
                }
                handleBidsChange={[Function]}
                handleCloseModal={[Function]}
                handleEditFormChange={[Function]}
                handleEditFormSubmit={[Function]}
                props={
                  Object {
                    "addMerchantSubmit": [Function],
                    "classes": Object {
                      "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                      "button": "Connect-MerchantTable--button-3",
                      "root": "Connect-MerchantTable--root-1",
                      "table": "Connect-MerchantTable--table-2",
                    },
                    "deleteMerchant": [Function],
                    "displayBids": Array [],
                    "editMerchant": [Function],
                    "editMerchantSubmit": [Function],
                    "merchantFormData": Object {
                      "avatarUrl": "",
                      "bids": Array [],
                      "email": "",
                      "firstName": "",
                      "hasPremium": false,
                      "id": "",
                      "lastName": "",
                      "phone": "",
                    },
                    "merchants": Array [
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [
                          Object {
                            "amount": 1,
                            "carTitle": "title",
                            "created": "01/01/01",
                            "id": "1",
                          },
                          Object {
                            "amount": 2,
                            "carTitle": "title2",
                            "created": "02/02/02",
                            "id": "2",
                          },
                        ],
                        "email": "test11@test.com",
                        "firstName": "test11",
                        "hasPremium": true,
                        "id": "0",
                        "lastName": "test12",
                        "phone": 1234567891,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test22@test.com",
                        "firstName": "test21",
                        "hasPremium": true,
                        "id": "1",
                        "lastName": "test22",
                        "phone": 1234567892,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test33@test.com",
                        "firstName": "test31",
                        "hasPremium": false,
                        "id": "2",
                        "lastName": "test32",
                        "phone": 1234567893,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test44@test.com",
                        "firstName": "test41",
                        "hasPremium": true,
                        "id": "3",
                        "lastName": "test42",
                        "phone": 1234567894,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test55@test.com",
                        "firstName": "test51",
                        "hasPremium": false,
                        "id": "4",
                        "lastName": "test52",
                        "phone": 1234567895,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test11@test.com",
                        "firstName": "test11",
                        "hasPremium": true,
                        "id": "5",
                        "lastName": "test12",
                        "phone": 1234567891,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test22@test.com",
                        "firstName": "test21",
                        "hasPremium": true,
                        "id": "6",
                        "lastName": "test22",
                        "phone": 1234567892,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test33@test.com",
                        "firstName": "test31",
                        "hasPremium": false,
                        "id": "7",
                        "lastName": "test32",
                        "phone": 1234567893,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test44@test.com",
                        "firstName": "test41",
                        "hasPremium": true,
                        "id": "8",
                        "lastName": "test42",
                        "phone": 1234567894,
                      },
                      Object {
                        "avatarUrl": "www.google.com",
                        "bids": Array [],
                        "email": "test55@test.com",
                        "firstName": "test51",
                        "hasPremium": false,
                        "id": "9",
                        "lastName": "test52",
                        "phone": 1234567895,
                      },
                    ],
                    "modifyBids": [Function],
                    "selectMerchant": [Function],
                    "sortBids": [Function],
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  }
                }
                state={
                  Object {
                    "error": Object {
                      "editForm": Object {
                        "Id": false,
                        "IdMessage": "",
                      },
                    },
                    "merchantRowData": Object {},
                    "openDeleteModal": false,
                    "openEditModal": false,
                    "page": 0,
                    "rowsPerPage": 5,
                  }
                }
              >
                <WithStyles(Dialog)
                  onClose={[Function]}
                  open={false}
                >
                  <Dialog
                    classes={
                      Object {
                        "fullScreen": "MuiDialog-fullScreen-67",
                        "fullWidth": "MuiDialog-fullWidth-66",
                        "paper": "MuiDialog-paper-62",
                        "paperWidthMd": "MuiDialog-paperWidthMd-65",
                        "paperWidthSm": "MuiDialog-paperWidthSm-64",
                        "paperWidthXs": "MuiDialog-paperWidthXs-63",
                        "root": "MuiDialog-root-61",
                      }
                    }
                    disableBackdropClick={false}
                    disableEscapeKeyDown={false}
                    fullScreen={false}
                    fullWidth={false}
                    maxWidth="sm"
                    onClose={[Function]}
                    open={false}
                    transition={[Function]}
                    transitionDuration={
                      Object {
                        "enter": 225,
                        "exit": 195,
                      }
                    }
                  >
                    <WithStyles(Modal)
                      BackdropProps={
                        Object {
                          "transitionDuration": Object {
                            "enter": 225,
                            "exit": 195,
                          },
                        }
                      }
                      className="MuiDialog-root-61"
                      disableBackdropClick={false}
                      disableEscapeKeyDown={false}
                      onClose={[Function]}
                      open={false}
                      role="dialog"
                    >
                      <Modal
                        BackdropComponent={[Function]}
                        BackdropProps={
                          Object {
                            "transitionDuration": Object {
                              "enter": 225,
                              "exit": 195,
                            },
                          }
                        }
                        className="MuiDialog-root-61"
                        classes={
                          Object {
                            "hidden": "MuiModal-hidden-69",
                            "root": "MuiModal-root-68",
                          }
                        }
                        disableAutoFocus={false}
                        disableBackdropClick={false}
                        disableEnforceFocus={false}
                        disableEscapeKeyDown={false}
                        disableRestoreFocus={false}
                        hideBackdrop={false}
                        keepMounted={false}
                        manager={
                          ModalManager {
                            "add": [Function],
                            "containers": Array [],
                            "data": Array [],
                            "handleContainerOverflow": true,
                            "hideSiblingNodes": true,
                            "isTopModal": [Function],
                            "modals": Array [],
                            "remove": [Function],
                          }
                        }
                        onClose={[Function]}
                        open={false}
                        role="dialog"
                      />
                    </WithStyles(Modal)>
                  </Dialog>
                </WithStyles(Dialog)>
              </EditMerchantDetailsModal>
            </WithStyles(EditMerchantDetailsModal)>
            <DeleteMerchantDetailsModal
              handleCloseModal={[Function]}
              handleDeleteModalData={[Function]}
              state={
                Object {
                  "error": Object {
                    "editForm": Object {
                      "Id": false,
                      "IdMessage": "",
                    },
                  },
                  "merchantRowData": Object {},
                  "openDeleteModal": false,
                  "openEditModal": false,
                  "page": 0,
                  "rowsPerPage": 5,
                }
              }
            >
              <WithStyles(Dialog)
                onClose={[Function]}
                open={false}
              >
                <Dialog
                  classes={
                    Object {
                      "fullScreen": "MuiDialog-fullScreen-67",
                      "fullWidth": "MuiDialog-fullWidth-66",
                      "paper": "MuiDialog-paper-62",
                      "paperWidthMd": "MuiDialog-paperWidthMd-65",
                      "paperWidthSm": "MuiDialog-paperWidthSm-64",
                      "paperWidthXs": "MuiDialog-paperWidthXs-63",
                      "root": "MuiDialog-root-61",
                    }
                  }
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  fullScreen={false}
                  fullWidth={false}
                  maxWidth="sm"
                  onClose={[Function]}
                  open={false}
                  transition={[Function]}
                  transitionDuration={
                    Object {
                      "enter": 225,
                      "exit": 195,
                    }
                  }
                >
                  <WithStyles(Modal)
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDialog-root-61"
                    disableBackdropClick={false}
                    disableEscapeKeyDown={false}
                    onClose={[Function]}
                    open={false}
                    role="dialog"
                  >
                    <Modal
                      BackdropComponent={[Function]}
                      BackdropProps={
                        Object {
                          "transitionDuration": Object {
                            "enter": 225,
                            "exit": 195,
                          },
                        }
                      }
                      className="MuiDialog-root-61"
                      classes={
                        Object {
                          "hidden": "MuiModal-hidden-69",
                          "root": "MuiModal-root-68",
                        }
                      }
                      disableAutoFocus={false}
                      disableBackdropClick={false}
                      disableEnforceFocus={false}
                      disableEscapeKeyDown={false}
                      disableRestoreFocus={false}
                      hideBackdrop={false}
                      keepMounted={false}
                      manager={
                        ModalManager {
                          "add": [Function],
                          "containers": Array [],
                          "data": Array [],
                          "handleContainerOverflow": true,
                          "hideSiblingNodes": true,
                          "isTopModal": [Function],
                          "modals": Array [],
                          "remove": [Function],
                        }
                      }
                      onClose={[Function]}
                      open={false}
                      role="dialog"
                    />
                  </WithStyles(Modal)>
                </Dialog>
              </WithStyles(Dialog)>
            </DeleteMerchantDetailsModal>
            <Component
              classes={
                Object {
                  "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                  "button": "Connect-MerchantTable--button-3",
                  "root": "Connect-MerchantTable--root-1",
                  "table": "Connect-MerchantTable--table-2",
                }
              }
              handleChangePage={[Function]}
              handleChangeRowsPerPage={[Function]}
              merchants={
                Array [
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [
                      Object {
                        "amount": 1,
                        "carTitle": "title",
                        "created": "01/01/01",
                        "id": "1",
                      },
                      Object {
                        "amount": 2,
                        "carTitle": "title2",
                        "created": "02/02/02",
                        "id": "2",
                      },
                    ],
                    "email": "test11@test.com",
                    "firstName": "test11",
                    "hasPremium": true,
                    "id": "0",
                    "lastName": "test12",
                    "phone": 1234567891,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test22@test.com",
                    "firstName": "test21",
                    "hasPremium": true,
                    "id": "1",
                    "lastName": "test22",
                    "phone": 1234567892,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test33@test.com",
                    "firstName": "test31",
                    "hasPremium": false,
                    "id": "2",
                    "lastName": "test32",
                    "phone": 1234567893,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test44@test.com",
                    "firstName": "test41",
                    "hasPremium": true,
                    "id": "3",
                    "lastName": "test42",
                    "phone": 1234567894,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test55@test.com",
                    "firstName": "test51",
                    "hasPremium": false,
                    "id": "4",
                    "lastName": "test52",
                    "phone": 1234567895,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test11@test.com",
                    "firstName": "test11",
                    "hasPremium": true,
                    "id": "5",
                    "lastName": "test12",
                    "phone": 1234567891,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test22@test.com",
                    "firstName": "test21",
                    "hasPremium": true,
                    "id": "6",
                    "lastName": "test22",
                    "phone": 1234567892,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test33@test.com",
                    "firstName": "test31",
                    "hasPremium": false,
                    "id": "7",
                    "lastName": "test32",
                    "phone": 1234567893,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test44@test.com",
                    "firstName": "test41",
                    "hasPremium": true,
                    "id": "8",
                    "lastName": "test42",
                    "phone": 1234567894,
                  },
                  Object {
                    "avatarUrl": "www.google.com",
                    "bids": Array [],
                    "email": "test55@test.com",
                    "firstName": "test51",
                    "hasPremium": false,
                    "id": "9",
                    "lastName": "test52",
                    "phone": 1234567895,
                  },
                ]
              }
              page={0}
              rowsPerPage={5}
              sortBids={[Function]}
              toggleDeleteModal={[Function]}
              toggleEditModal={[Function]}
            >
              <WithStyles(Table)
                className="Connect-MerchantTable--table-2"
              >
                <Table
                  className="Connect-MerchantTable--table-2"
                  classes={
                    Object {
                      "root": "MuiTable-root-70",
                    }
                  }
                  component="table"
                >
                  <table
                    className="MuiTable-root-70 Connect-MerchantTable--table-2"
                  >
                    <TableHead
                      component="thead"
                    >
                      <thead>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71 MuiTableRow-head-72"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Merchant Name
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          ID
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Avatar
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Email
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Phone
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          HasPremium
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Bids
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                className="Connect-MerchantTable--actionsTitle-4"
                              >
                                <TableCell
                                  className="Connect-MerchantTable--actionsTitle-4"
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <th
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeHead-78 Connect-MerchantTable--actionsTitle-4"
                                  >
                                    <WithStyles(Typography)
                                      type="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-97",
                                            "alignJustify": "MuiTypography-alignJustify-99",
                                            "alignLeft": "MuiTypography-alignLeft-96",
                                            "alignRight": "MuiTypography-alignRight-98",
                                            "body1": "MuiTypography-body1-93",
                                            "body2": "MuiTypography-body2-92",
                                            "button": "MuiTypography-button-95",
                                            "caption": "MuiTypography-caption-94",
                                            "colorAccent": "MuiTypography-colorAccent-106",
                                            "colorError": "MuiTypography-colorError-107",
                                            "colorInherit": "MuiTypography-colorInherit-103",
                                            "colorPrimary": "MuiTypography-colorPrimary-104",
                                            "colorSecondary": "MuiTypography-colorSecondary-105",
                                            "display1": "MuiTypography-display1-88",
                                            "display2": "MuiTypography-display2-87",
                                            "display3": "MuiTypography-display3-86",
                                            "display4": "MuiTypography-display4-85",
                                            "gutterBottom": "MuiTypography-gutterBottom-101",
                                            "headline": "MuiTypography-headline-89",
                                            "noWrap": "MuiTypography-noWrap-100",
                                            "paragraph": "MuiTypography-paragraph-102",
                                            "root": "MuiTypography-root-84",
                                            "subheading": "MuiTypography-subheading-91",
                                            "title": "MuiTypography-title-90",
                                          }
                                        }
                                        color="default"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        type="body2"
                                      >
                                        <aside
                                          className="MuiTypography-root-84 MuiTypography-body2-92"
                                        >
                                          Actions
                                        </aside>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </th>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                      </thead>
                    </TableHead>
                    <TableBody
                      component="tbody"
                    >
                      <tbody>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test11 test12
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    0
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    www.google.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test11@test.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1234567891
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    Yes
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <BidsDialogComponent
                                      classes={
                                        Object {
                                          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                                          "button": "Connect-MerchantTable--button-3",
                                          "root": "Connect-MerchantTable--root-1",
                                          "table": "Connect-MerchantTable--table-2",
                                        }
                                      }
                                      merchant={
                                        Object {
                                          "avatarUrl": "www.google.com",
                                          "bids": Array [
                                            Object {
                                              "amount": 1,
                                              "carTitle": "title",
                                              "created": "01/01/01",
                                              "id": "1",
                                            },
                                            Object {
                                              "amount": 2,
                                              "carTitle": "title2",
                                              "created": "02/02/02",
                                              "id": "2",
                                            },
                                          ],
                                          "email": "test11@test.com",
                                          "firstName": "test11",
                                          "hasPremium": true,
                                          "id": "0",
                                          "lastName": "test12",
                                          "phone": 1234567891,
                                        }
                                      }
                                      sortBids={[Function]}
                                    >
                                      <div>
                                        <WithStyles(Button)
                                          dense={true}
                                          onClick={[Function]}
                                          raised={true}
                                        >
                                          <Button
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit-38",
                                                "dense": "MuiButton-dense-33",
                                                "disabled": "MuiButton-disabled-44",
                                                "fab": "MuiButton-fab-45",
                                                "flatAccent": "MuiButton-flatAccent-36",
                                                "flatContrast": "MuiButton-flatContrast-37",
                                                "flatPrimary": "MuiButton-flatPrimary-35",
                                                "fullWidth": "MuiButton-fullWidth-47",
                                                "keyboardFocused": "MuiButton-keyboardFocused-40",
                                                "label": "MuiButton-label-34",
                                                "mini": "MuiButton-mini-46",
                                                "raised": "MuiButton-raised-39",
                                                "raisedAccent": "MuiButton-raisedAccent-42",
                                                "raisedContrast": "MuiButton-raisedContrast-43",
                                                "raisedPrimary": "MuiButton-raisedPrimary-41",
                                                "root": "MuiButton-root-32",
                                              }
                                            }
                                            color="default"
                                            dense={true}
                                            disableFocusRipple={false}
                                            disableRipple={false}
                                            disabled={false}
                                            fab={false}
                                            fullWidth={false}
                                            mini={false}
                                            onClick={[Function]}
                                            raised={true}
                                            type="button"
                                          >
                                            <WithStyles(ButtonBase)
                                              className="MuiButton-root-32 MuiButton-raised-39 MuiButton-dense-33"
                                              disableRipple={false}
                                              disabled={false}
                                              focusRipple={true}
                                              keyboardFocusedClassName="MuiButton-keyboardFocused-40"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ButtonBase
                                                centerRipple={false}
                                                className="MuiButton-root-32 MuiButton-raised-39 MuiButton-dense-33"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-49",
                                                    "root": "MuiButtonBase-root-48",
                                                  }
                                                }
                                                disableRipple={false}
                                                disabled={false}
                                                focusRipple={true}
                                                keyboardFocusedClassName="MuiButton-keyboardFocused-40"
                                                onClick={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root-48 MuiButton-root-32 MuiButton-raised-39 MuiButton-dense-33"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label-34"
                                                  >
                                                    Bids
                                                  </span>
                                                  <WithStyles(TouchRipple)
                                                    center={false}
                                                    innerRef={[Function]}
                                                  >
                                                    <TouchRipple
                                                      center={false}
                                                      classes={
                                                        Object {
                                                          "ripple": "MuiTouchRipple-ripple-54",
                                                          "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                          "root": "MuiTouchRipple-root-50",
                                                          "wrapper": "MuiTouchRipple-wrapper-51",
                                                          "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                          "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                        }
                                                      }
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        className="MuiTouchRipple-root-50"
                                                        component="span"
                                                        enter={true}
                                                        exit={true}
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root-50"
                                                        />
                                                      </TransitionGroup>
                                                    </TouchRipple>
                                                  </WithStyles(TouchRipple)>
                                                </button>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </Button>
                                        </WithStyles(Button)>
                                        <WithStyles(Dialog)
                                          aria-labelledby="simple-dialog-title"
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <Dialog
                                            aria-labelledby="simple-dialog-title"
                                            classes={
                                              Object {
                                                "fullScreen": "MuiDialog-fullScreen-67",
                                                "fullWidth": "MuiDialog-fullWidth-66",
                                                "paper": "MuiDialog-paper-62",
                                                "paperWidthMd": "MuiDialog-paperWidthMd-65",
                                                "paperWidthSm": "MuiDialog-paperWidthSm-64",
                                                "paperWidthXs": "MuiDialog-paperWidthXs-63",
                                                "root": "MuiDialog-root-61",
                                              }
                                            }
                                            disableBackdropClick={false}
                                            disableEscapeKeyDown={false}
                                            fullScreen={false}
                                            fullWidth={false}
                                            maxWidth="sm"
                                            onClose={[Function]}
                                            open={false}
                                            transition={[Function]}
                                            transitionDuration={
                                              Object {
                                                "enter": 225,
                                                "exit": 195,
                                              }
                                            }
                                          >
                                            <WithStyles(Modal)
                                              BackdropProps={
                                                Object {
                                                  "transitionDuration": Object {
                                                    "enter": 225,
                                                    "exit": 195,
                                                  },
                                                }
                                              }
                                              aria-labelledby="simple-dialog-title"
                                              className="MuiDialog-root-61"
                                              disableBackdropClick={false}
                                              disableEscapeKeyDown={false}
                                              onClose={[Function]}
                                              open={false}
                                              role="dialog"
                                            >
                                              <Modal
                                                BackdropComponent={[Function]}
                                                BackdropProps={
                                                  Object {
                                                    "transitionDuration": Object {
                                                      "enter": 225,
                                                      "exit": 195,
                                                    },
                                                  }
                                                }
                                                aria-labelledby="simple-dialog-title"
                                                className="MuiDialog-root-61"
                                                classes={
                                                  Object {
                                                    "hidden": "MuiModal-hidden-69",
                                                    "root": "MuiModal-root-68",
                                                  }
                                                }
                                                disableAutoFocus={false}
                                                disableBackdropClick={false}
                                                disableEnforceFocus={false}
                                                disableEscapeKeyDown={false}
                                                disableRestoreFocus={false}
                                                hideBackdrop={false}
                                                keepMounted={false}
                                                manager={
                                                  ModalManager {
                                                    "add": [Function],
                                                    "containers": Array [],
                                                    "data": Array [],
                                                    "handleContainerOverflow": true,
                                                    "hideSiblingNodes": true,
                                                    "isTopModal": [Function],
                                                    "modals": Array [],
                                                    "remove": [Function],
                                                  }
                                                }
                                                onClose={[Function]}
                                                open={false}
                                                role="dialog"
                                              />
                                            </WithStyles(Modal)>
                                          </Dialog>
                                        </WithStyles(Dialog)>
                                      </div>
                                    </BidsDialogComponent>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <WithStyles(IconButton)
                                      aria-label="Edit"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Edit"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Edit"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Edit"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Edit)
                                                  className="MuiIconButton-icon-115"
                                                >
                                                  <Edit
                                                    className="MuiIconButton-icon-115"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="inherit"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                    <WithStyles(IconButton)
                                      aria-label="Delete"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Delete"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Delete"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Delete"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Delete)
                                                  className="MuiIconButton-icon-115"
                                                  color="error"
                                                >
                                                  <Delete
                                                    className="MuiIconButton-icon-115"
                                                    color="error"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                      color="error"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="error"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiSvgIcon-colorError-122 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Delete>
                                                </pure(Delete)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test21 test22
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    www.google.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test22@test.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1234567892
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    Yes
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <BidsDialogComponent
                                      classes={
                                        Object {
                                          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                                          "button": "Connect-MerchantTable--button-3",
                                          "root": "Connect-MerchantTable--root-1",
                                          "table": "Connect-MerchantTable--table-2",
                                        }
                                      }
                                      merchant={
                                        Object {
                                          "avatarUrl": "www.google.com",
                                          "bids": Array [],
                                          "email": "test22@test.com",
                                          "firstName": "test21",
                                          "hasPremium": true,
                                          "id": "1",
                                          "lastName": "test22",
                                          "phone": 1234567892,
                                        }
                                      }
                                      sortBids={[Function]}
                                    >
                                      <div>
                                        No Bids
                                      </div>
                                    </BidsDialogComponent>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <WithStyles(IconButton)
                                      aria-label="Edit"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Edit"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Edit"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Edit"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Edit)
                                                  className="MuiIconButton-icon-115"
                                                >
                                                  <Edit
                                                    className="MuiIconButton-icon-115"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="inherit"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                    <WithStyles(IconButton)
                                      aria-label="Delete"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Delete"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Delete"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Delete"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Delete)
                                                  className="MuiIconButton-icon-115"
                                                  color="error"
                                                >
                                                  <Delete
                                                    className="MuiIconButton-icon-115"
                                                    color="error"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                      color="error"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="error"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiSvgIcon-colorError-122 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Delete>
                                                </pure(Delete)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test31 test32
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    2
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    www.google.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test33@test.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1234567893
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    No
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <BidsDialogComponent
                                      classes={
                                        Object {
                                          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                                          "button": "Connect-MerchantTable--button-3",
                                          "root": "Connect-MerchantTable--root-1",
                                          "table": "Connect-MerchantTable--table-2",
                                        }
                                      }
                                      merchant={
                                        Object {
                                          "avatarUrl": "www.google.com",
                                          "bids": Array [],
                                          "email": "test33@test.com",
                                          "firstName": "test31",
                                          "hasPremium": false,
                                          "id": "2",
                                          "lastName": "test32",
                                          "phone": 1234567893,
                                        }
                                      }
                                      sortBids={[Function]}
                                    >
                                      <div>
                                        No Bids
                                      </div>
                                    </BidsDialogComponent>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <WithStyles(IconButton)
                                      aria-label="Edit"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Edit"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Edit"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Edit"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Edit)
                                                  className="MuiIconButton-icon-115"
                                                >
                                                  <Edit
                                                    className="MuiIconButton-icon-115"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="inherit"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                    <WithStyles(IconButton)
                                      aria-label="Delete"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Delete"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Delete"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Delete"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Delete)
                                                  className="MuiIconButton-icon-115"
                                                  color="error"
                                                >
                                                  <Delete
                                                    className="MuiIconButton-icon-115"
                                                    color="error"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                      color="error"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="error"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiSvgIcon-colorError-122 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Delete>
                                                </pure(Delete)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test41 test42
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    3
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    www.google.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test44@test.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1234567894
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    Yes
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <BidsDialogComponent
                                      classes={
                                        Object {
                                          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                                          "button": "Connect-MerchantTable--button-3",
                                          "root": "Connect-MerchantTable--root-1",
                                          "table": "Connect-MerchantTable--table-2",
                                        }
                                      }
                                      merchant={
                                        Object {
                                          "avatarUrl": "www.google.com",
                                          "bids": Array [],
                                          "email": "test44@test.com",
                                          "firstName": "test41",
                                          "hasPremium": true,
                                          "id": "3",
                                          "lastName": "test42",
                                          "phone": 1234567894,
                                        }
                                      }
                                      sortBids={[Function]}
                                    >
                                      <div>
                                        No Bids
                                      </div>
                                    </BidsDialogComponent>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <WithStyles(IconButton)
                                      aria-label="Edit"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Edit"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Edit"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Edit"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Edit)
                                                  className="MuiIconButton-icon-115"
                                                >
                                                  <Edit
                                                    className="MuiIconButton-icon-115"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="inherit"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                    <WithStyles(IconButton)
                                      aria-label="Delete"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Delete"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Delete"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Delete"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Delete)
                                                  className="MuiIconButton-icon-115"
                                                  color="error"
                                                >
                                                  <Delete
                                                    className="MuiIconButton-icon-115"
                                                    color="error"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                      color="error"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="error"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiSvgIcon-colorError-122 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Delete>
                                                </pure(Delete)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71"
                            >
                              <WithStyles(TableCell)>
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={false}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test51 test52
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    4
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    www.google.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    test55@test.com
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    1234567895
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    No
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <BidsDialogComponent
                                      classes={
                                        Object {
                                          "actionsTitle": "Connect-MerchantTable--actionsTitle-4",
                                          "button": "Connect-MerchantTable--button-3",
                                          "root": "Connect-MerchantTable--root-1",
                                          "table": "Connect-MerchantTable--table-2",
                                        }
                                      }
                                      merchant={
                                        Object {
                                          "avatarUrl": "www.google.com",
                                          "bids": Array [],
                                          "email": "test55@test.com",
                                          "firstName": "test51",
                                          "hasPremium": false,
                                          "id": "4",
                                          "lastName": "test52",
                                          "phone": 1234567895,
                                        }
                                      }
                                      sortBids={[Function]}
                                    >
                                      <div>
                                        No Bids
                                      </div>
                                    </BidsDialogComponent>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                              <WithStyles(TableCell)
                                numeric={true}
                              >
                                <TableCell
                                  classes={
                                    Object {
                                      "numeric": "MuiTableCell-numeric-77",
                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                      "paddingDefault": "MuiTableCell-paddingDefault-81",
                                      "paddingDense": "MuiTableCell-paddingDense-82",
                                      "root": "MuiTableCell-root-76",
                                      "typeBody": "MuiTableCell-typeBody-79",
                                      "typeFooter": "MuiTableCell-typeFooter-80",
                                      "typeHead": "MuiTableCell-typeHead-78",
                                    }
                                  }
                                  numeric={true}
                                  padding="default"
                                >
                                  <td
                                    aria-sort={null}
                                    className="MuiTableCell-root-76 MuiTableCell-numeric-77 MuiTableCell-paddingDefault-81 MuiTableCell-typeBody-79"
                                  >
                                    <WithStyles(IconButton)
                                      aria-label="Edit"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Edit"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Edit"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Edit"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Edit"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Edit)
                                                  className="MuiIconButton-icon-115"
                                                >
                                                  <Edit
                                                    className="MuiIconButton-icon-115"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="inherit"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Edit>
                                                </pure(Edit)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                    <WithStyles(IconButton)
                                      aria-label="Delete"
                                      className="Connect-MerchantTable--button-3"
                                      onClick={[Function]}
                                    >
                                      <IconButton
                                        aria-label="Delete"
                                        className="Connect-MerchantTable--button-3"
                                        classes={
                                          Object {
                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                            "disabled": "MuiIconButton-disabled-113",
                                            "icon": "MuiIconButton-icon-115",
                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                            "label": "MuiIconButton-label-114",
                                            "root": "MuiIconButton-root-108",
                                          }
                                        }
                                        color="default"
                                        disableRipple={false}
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ButtonBase)
                                          aria-label="Delete"
                                          centerRipple={true}
                                          className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                          disableRipple={false}
                                          disabled={false}
                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            aria-label="Delete"
                                            centerRipple={true}
                                            className="MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-49",
                                                "root": "MuiButtonBase-root-48",
                                              }
                                            }
                                            disableRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                            onClick={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              aria-label="Delete"
                                              className="MuiButtonBase-root-48 MuiIconButton-root-108 Connect-MerchantTable--button-3"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiIconButton-label-114"
                                              >
                                                <pure(Delete)
                                                  className="MuiIconButton-icon-115"
                                                  color="error"
                                                >
                                                  <Delete
                                                    className="MuiIconButton-icon-115"
                                                    color="error"
                                                  >
                                                    <WithStyles(SvgIcon)
                                                      className="MuiIconButton-icon-115"
                                                      color="error"
                                                    >
                                                      <SvgIcon
                                                        className="MuiIconButton-icon-115"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                            "root": "MuiSvgIcon-root-117",
                                                          }
                                                        }
                                                        color="error"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="MuiSvgIcon-root-117 MuiSvgIcon-colorError-122 MuiIconButton-icon-115"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                          />
                                                        </svg>
                                                      </SvgIcon>
                                                    </WithStyles(SvgIcon)>
                                                  </Delete>
                                                </pure(Delete)>
                                              </span>
                                              <WithStyles(TouchRipple)
                                                center={true}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                      "root": "MuiTouchRipple-root-50",
                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-50"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-50"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </button>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </IconButton>
                                    </WithStyles(IconButton)>
                                  </td>
                                </TableCell>
                              </WithStyles(TableCell)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                      </tbody>
                    </TableBody>
                    <TableFooter
                      component="tfoot"
                    >
                      <tfoot>
                        <WithStyles(TableRow)>
                          <TableRow
                            classes={
                              Object {
                                "footer": "MuiTableRow-footer-73",
                                "head": "MuiTableRow-head-72",
                                "hover": "MuiTableRow-hover-74",
                                "root": "MuiTableRow-root-71",
                                "selected": "MuiTableRow-selected-75",
                              }
                            }
                            component="tr"
                            hover={false}
                            selected={false}
                          >
                            <tr
                              className="MuiTableRow-root-71 MuiTableRow-footer-73"
                            >
                              <WithStyles(TablePagination)
                                backIconButtonProps={
                                  Object {
                                    "aria-label": "Previous Page",
                                  }
                                }
                                colSpan={6}
                                count={10}
                                nextIconButtonProps={
                                  Object {
                                    "aria-label": "Next Page",
                                  }
                                }
                                onChangePage={[Function]}
                                onChangeRowsPerPage={[Function]}
                                page={0}
                                rowsPerPage={5}
                              >
                                <TablePagination
                                  Actions={[Function]}
                                  backIconButtonProps={
                                    Object {
                                      "aria-label": "Previous Page",
                                    }
                                  }
                                  classes={
                                    Object {
                                      "actions": "MuiTablePagination-actions-132",
                                      "caption": "MuiTablePagination-caption-127",
                                      "input": "MuiTablePagination-input-128",
                                      "root": "MuiTablePagination-root-124",
                                      "select": "MuiTablePagination-select-130",
                                      "selectIcon": "MuiTablePagination-selectIcon-131",
                                      "selectRoot": "MuiTablePagination-selectRoot-129",
                                      "spacer": "MuiTablePagination-spacer-126",
                                      "toolbar": "MuiTablePagination-toolbar-125",
                                    }
                                  }
                                  colSpan={6}
                                  component={[Function]}
                                  count={10}
                                  labelDisplayedRows={[Function]}
                                  labelRowsPerPage="Rows per page:"
                                  nextIconButtonProps={
                                    Object {
                                      "aria-label": "Next Page",
                                    }
                                  }
                                  onChangePage={[Function]}
                                  onChangeRowsPerPage={[Function]}
                                  page={0}
                                  rowsPerPage={5}
                                  rowsPerPageOptions={
                                    Array [
                                      5,
                                      10,
                                      25,
                                    ]
                                  }
                                >
                                  <WithStyles(TableCell)
                                    className="MuiTablePagination-root-124"
                                    colSpan={6}
                                  >
                                    <TableCell
                                      className="MuiTablePagination-root-124"
                                      classes={
                                        Object {
                                          "numeric": "MuiTableCell-numeric-77",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox-83",
                                          "paddingDefault": "MuiTableCell-paddingDefault-81",
                                          "paddingDense": "MuiTableCell-paddingDense-82",
                                          "root": "MuiTableCell-root-76",
                                          "typeBody": "MuiTableCell-typeBody-79",
                                          "typeFooter": "MuiTableCell-typeFooter-80",
                                          "typeHead": "MuiTableCell-typeHead-78",
                                        }
                                      }
                                      colSpan={6}
                                      numeric={false}
                                      padding="default"
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root-76 MuiTableCell-paddingDefault-81 MuiTableCell-typeFooter-80 MuiTablePagination-root-124"
                                        colSpan={6}
                                      >
                                        <WithStyles(Toolbar)
                                          className="MuiTablePagination-toolbar-125"
                                        >
                                          <Toolbar
                                            className="MuiTablePagination-toolbar-125"
                                            classes={
                                              Object {
                                                "gutters": "MuiToolbar-gutters-134",
                                                "root": "MuiToolbar-root-133",
                                              }
                                            }
                                            disableGutters={false}
                                          >
                                            <div
                                              className="MuiToolbar-root-133 MuiToolbar-gutters-134 MuiTablePagination-toolbar-125"
                                            >
                                              <div
                                                className="MuiTablePagination-spacer-126"
                                              />
                                              <WithStyles(Typography)
                                                className="MuiTablePagination-caption-127"
                                                type="caption"
                                              >
                                                <Typography
                                                  align="inherit"
                                                  className="MuiTablePagination-caption-127"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter-97",
                                                      "alignJustify": "MuiTypography-alignJustify-99",
                                                      "alignLeft": "MuiTypography-alignLeft-96",
                                                      "alignRight": "MuiTypography-alignRight-98",
                                                      "body1": "MuiTypography-body1-93",
                                                      "body2": "MuiTypography-body2-92",
                                                      "button": "MuiTypography-button-95",
                                                      "caption": "MuiTypography-caption-94",
                                                      "colorAccent": "MuiTypography-colorAccent-106",
                                                      "colorError": "MuiTypography-colorError-107",
                                                      "colorInherit": "MuiTypography-colorInherit-103",
                                                      "colorPrimary": "MuiTypography-colorPrimary-104",
                                                      "colorSecondary": "MuiTypography-colorSecondary-105",
                                                      "display1": "MuiTypography-display1-88",
                                                      "display2": "MuiTypography-display2-87",
                                                      "display3": "MuiTypography-display3-86",
                                                      "display4": "MuiTypography-display4-85",
                                                      "gutterBottom": "MuiTypography-gutterBottom-101",
                                                      "headline": "MuiTypography-headline-89",
                                                      "noWrap": "MuiTypography-noWrap-100",
                                                      "paragraph": "MuiTypography-paragraph-102",
                                                      "root": "MuiTypography-root-84",
                                                      "subheading": "MuiTypography-subheading-91",
                                                      "title": "MuiTypography-title-90",
                                                    }
                                                  }
                                                  color="default"
                                                  gutterBottom={false}
                                                  headlineMapping={
                                                    Object {
                                                      "body1": "p",
                                                      "body2": "aside",
                                                      "display1": "h1",
                                                      "display2": "h1",
                                                      "display3": "h1",
                                                      "display4": "h1",
                                                      "headline": "h1",
                                                      "subheading": "h3",
                                                      "title": "h2",
                                                    }
                                                  }
                                                  noWrap={false}
                                                  paragraph={false}
                                                  type="caption"
                                                >
                                                  <span
                                                    className="MuiTypography-root-84 MuiTypography-caption-94 MuiTablePagination-caption-127"
                                                  >
                                                    Rows per page:
                                                  </span>
                                                </Typography>
                                              </WithStyles(Typography)>
                                              <WithStyles(Select)
                                                classes={
                                                  Object {
                                                    "icon": "MuiTablePagination-selectIcon-131",
                                                    "root": "MuiTablePagination-selectRoot-129",
                                                    "select": "MuiTablePagination-select-130",
                                                  }
                                                }
                                                input={
                                                  <WithStyles(Input)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTablePagination-input-128",
                                                      }
                                                    }
                                                    disableUnderline={true}
                                                  />
                                                }
                                                onChange={[Function]}
                                                value={5}
                                              >
                                                <Select
                                                  autoWidth={false}
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiSelect-disabled-138",
                                                      "icon": "MuiSelect-icon-139 MuiTablePagination-selectIcon-131",
                                                      "root": "MuiSelect-root-135 MuiTablePagination-selectRoot-129",
                                                      "select": "MuiSelect-select-136 MuiTablePagination-select-130",
                                                      "selectMenu": "MuiSelect-selectMenu-137",
                                                    }
                                                  }
                                                  displayEmpty={false}
                                                  input={
                                                    <WithStyles(Input)
                                                      classes={
                                                        Object {
                                                          "root": "MuiTablePagination-input-128",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                    />
                                                  }
                                                  multiple={false}
                                                  native={false}
                                                  onChange={[Function]}
                                                  value={5}
                                                >
                                                  <WithStyles(Input)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTablePagination-input-128",
                                                      }
                                                    }
                                                    disableUnderline={true}
                                                    inputComponent={[Function]}
                                                    inputProps={
                                                      Object {
                                                        "MenuProps": undefined,
                                                        "autoWidth": false,
                                                        "children": Array [
                                                          <WithStyles(MenuItem)
                                                            value={5}
                                                      >
                                                            5
                                                      </WithStyles(MenuItem)>,
                                                          <WithStyles(MenuItem)
                                                            value={10}
                                                      >
                                                            10
                                                      </WithStyles(MenuItem)>,
                                                          <WithStyles(MenuItem)
                                                            value={25}
                                                      >
                                                            25
                                                      </WithStyles(MenuItem)>,
                                                        ],
                                                        "classes": Object {
                                                          "disabled": "MuiSelect-disabled-138",
                                                          "icon": "MuiSelect-icon-139 MuiTablePagination-selectIcon-131",
                                                          "root": "MuiSelect-root-135 MuiTablePagination-selectRoot-129",
                                                          "select": "MuiSelect-select-136 MuiTablePagination-select-130",
                                                          "selectMenu": "MuiSelect-selectMenu-137",
                                                        },
                                                        "displayEmpty": false,
                                                        "multiple": false,
                                                        "native": false,
                                                        "onClose": undefined,
                                                        "onOpen": undefined,
                                                        "open": undefined,
                                                        "renderValue": undefined,
                                                      }
                                                    }
                                                    onChange={[Function]}
                                                    value={5}
                                                  >
                                                    <Input
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiInput-disabled-145",
                                                          "error": "MuiInput-error-143",
                                                          "focused": "MuiInput-focused-144",
                                                          "formControl": "MuiInput-formControl-141",
                                                          "fullWidth": "MuiInput-fullWidth-148",
                                                          "inkbar": "MuiInput-inkbar-142",
                                                          "input": "MuiInput-input-149",
                                                          "inputDense": "MuiInput-inputDense-150",
                                                          "inputDisabled": "MuiInput-inputDisabled-151",
                                                          "inputMultiline": "MuiInput-inputMultiline-153",
                                                          "inputSearch": "MuiInput-inputSearch-154",
                                                          "inputSingleline": "MuiInput-inputSingleline-152",
                                                          "multiline": "MuiInput-multiline-147",
                                                          "root": "MuiInput-root-140 MuiTablePagination-input-128",
                                                          "underline": "MuiInput-underline-146",
                                                        }
                                                      }
                                                      disableUnderline={true}
                                                      fullWidth={false}
                                                      inputComponent={[Function]}
                                                      inputProps={
                                                        Object {
                                                          "MenuProps": undefined,
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(MenuItem)
                                                              value={5}
                                                        >
                                                              5
                                                        </WithStyles(MenuItem)>,
                                                            <WithStyles(MenuItem)
                                                              value={10}
                                                        >
                                                              10
                                                        </WithStyles(MenuItem)>,
                                                            <WithStyles(MenuItem)
                                                              value={25}
                                                        >
                                                              25
                                                        </WithStyles(MenuItem)>,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "MuiSelect-disabled-138",
                                                            "icon": "MuiSelect-icon-139 MuiTablePagination-selectIcon-131",
                                                            "root": "MuiSelect-root-135 MuiTablePagination-selectRoot-129",
                                                            "select": "MuiSelect-select-136 MuiTablePagination-select-130",
                                                            "selectMenu": "MuiSelect-selectMenu-137",
                                                          },
                                                          "displayEmpty": false,
                                                          "multiple": false,
                                                          "native": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                        }
                                                      }
                                                      multiline={false}
                                                      onChange={[Function]}
                                                      type="text"
                                                      value={5}
                                                    >
                                                      <div
                                                        className="MuiInput-root-140 MuiTablePagination-input-128"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                      >
                                                        <SelectInput
                                                          autoWidth={false}
                                                          className="MuiInput-input-149 MuiInput-inputSingleline-152"
                                                          classes={
                                                            Object {
                                                              "disabled": "MuiSelect-disabled-138",
                                                              "icon": "MuiSelect-icon-139 MuiTablePagination-selectIcon-131",
                                                              "root": "MuiSelect-root-135 MuiTablePagination-selectRoot-129",
                                                              "select": "MuiSelect-select-136 MuiTablePagination-select-130",
                                                              "selectMenu": "MuiSelect-selectMenu-137",
                                                            }
                                                          }
                                                          displayEmpty={false}
                                                          multiple={false}
                                                          native={false}
                                                          onChange={[Function]}
                                                          selectRef={[Function]}
                                                          type="text"
                                                          value={5}
                                                        >
                                                          <div
                                                            className="MuiSelect-root-135 MuiTablePagination-selectRoot-129"
                                                          >
                                                            <div
                                                              aria-haspopup="true"
                                                              aria-owns={null}
                                                              aria-pressed="false"
                                                              className="MuiSelect-select-136 MuiTablePagination-select-130 MuiSelect-selectMenu-137 MuiInput-input-149 MuiInput-inputSingleline-152"
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                            >
                                                              5
                                                            </div>
                                                            <input
                                                              type="hidden"
                                                              value={5}
                                                            />
                                                            <pure(ArrowDropDown)
                                                              className="MuiSelect-icon-139 MuiTablePagination-selectIcon-131"
                                                            >
                                                              <ArrowDropDown
                                                                className="MuiSelect-icon-139 MuiTablePagination-selectIcon-131"
                                                              >
                                                                <WithStyles(SvgIcon)
                                                                  className="MuiSelect-icon-139 MuiTablePagination-selectIcon-131"
                                                                >
                                                                  <SvgIcon
                                                                    className="MuiSelect-icon-139 MuiTablePagination-selectIcon-131"
                                                                    classes={
                                                                      Object {
                                                                        "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                                        "colorAction": "MuiSvgIcon-colorAction-119",
                                                                        "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                                        "colorError": "MuiSvgIcon-colorError-122",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                                        "root": "MuiSvgIcon-root-117",
                                                                      }
                                                                    }
                                                                    color="inherit"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="MuiSvgIcon-root-117 MuiSelect-icon-139 MuiTablePagination-selectIcon-131"
                                                                      focusable="false"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M7 10l5 5 5-5z"
                                                                      />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </ArrowDropDown>
                                                            </pure(ArrowDropDown)>
                                                            <WithStyles(Menu)
                                                              MenuListProps={
                                                                Object {
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={null}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <Menu
                                                                MenuListProps={
                                                                  Object {
                                                                    "role": "listbox",
                                                                  }
                                                                }
                                                                PaperProps={
                                                                  Object {
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                anchorEl={null}
                                                                classes={
                                                                  Object {
                                                                    "paper": "MuiMenu-paper-155",
                                                                  }
                                                                }
                                                                id="menu-"
                                                                onClose={[Function]}
                                                                open={false}
                                                                theme={
                                                                  Object {
                                                                    "breakpoints": Object {
                                                                      "between": [Function],
                                                                      "down": [Function],
                                                                      "keys": Array [
                                                                        "xs",
                                                                        "sm",
                                                                        "md",
                                                                        "lg",
                                                                        "xl",
                                                                      ],
                                                                      "only": [Function],
                                                                      "up": [Function],
                                                                      "values": Object {
                                                                        "lg": 1280,
                                                                        "md": 960,
                                                                        "sm": 600,
                                                                        "xl": 1920,
                                                                        "xs": 0,
                                                                      },
                                                                      "width": [Function],
                                                                    },
                                                                    "direction": "ltr",
                                                                    "mixins": Object {
                                                                      "gutters": [Function],
                                                                      "toolbar": Object {
                                                                        "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                          "minHeight": 48,
                                                                        },
                                                                        "@media (min-width:600px)": Object {
                                                                          "minHeight": 64,
                                                                        },
                                                                        "minHeight": 56,
                                                                      },
                                                                    },
                                                                    "palette": Object {
                                                                      "action": Object {
                                                                        "active": "rgba(0, 0, 0, 0.54)",
                                                                        "disabled": "rgba(0, 0, 0, 0.26)",
                                                                      },
                                                                      "background": Object {
                                                                        "appBar": "#f5f5f5",
                                                                        "avatar": "#bdbdbd",
                                                                        "chip": "#e0e0e0",
                                                                        "contentFrame": "#eeeeee",
                                                                        "default": "#fafafa",
                                                                        "paper": "#fff",
                                                                      },
                                                                      "common": Object {
                                                                        "black": "#000",
                                                                        "darkBlack": "rgba(0, 0, 0, 0.87)",
                                                                        "darkWhite": "rgba(255, 255, 255, 0.87)",
                                                                        "faintBlack": "rgba(0, 0, 0, 0.12)",
                                                                        "fullBlack": "rgba(0, 0, 0, 1)",
                                                                        "fullWhite": "rgba(255, 255, 255, 1)",
                                                                        "lightBlack": "rgba(0, 0, 0, 0.54)",
                                                                        "lightWhite": "rgba(255, 255, 255, 0.54)",
                                                                        "minBlack": "rgba(0, 0, 0, 0.26)",
                                                                        "transparent": "rgba(0, 0, 0, 0)",
                                                                        "white": "#fff",
                                                                      },
                                                                      "contrastThreshold": 3,
                                                                      "error": Object {
                                                                        "main": "#f44336",
                                                                      },
                                                                      "getContrastText": [Function],
                                                                      "grey": Object {
                                                                        "100": "#f5f5f5",
                                                                        "200": "#eeeeee",
                                                                        "300": "#e0e0e0",
                                                                        "400": "#bdbdbd",
                                                                        "50": "#fafafa",
                                                                        "500": "#9e9e9e",
                                                                        "600": "#757575",
                                                                        "700": "#616161",
                                                                        "800": "#424242",
                                                                        "900": "#212121",
                                                                        "A100": "#d5d5d5",
                                                                        "A200": "#aaaaaa",
                                                                        "A400": "#303030",
                                                                        "A700": "#616161",
                                                                      },
                                                                      "input": Object {
                                                                        "bottomLine": "rgba(0, 0, 0, 0.42)",
                                                                        "disabled": "rgba(0, 0, 0, 0.42)",
                                                                        "helperText": "rgba(0, 0, 0, 0.54)",
                                                                        "inputText": "rgba(0, 0, 0, 0.87)",
                                                                        "labelText": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "line": Object {
                                                                        "stepper": "#bdbdbd",
                                                                      },
                                                                      "primary": Object {
                                                                        "contrastText": "rgba(255, 255, 255, 1)",
                                                                        "dark": "#303f9f",
                                                                        "light": "#7986cb",
                                                                        "main": "#3f51b5",
                                                                      },
                                                                      "secondary": Object {
                                                                        "contrastText": "rgba(255, 255, 255, 1)",
                                                                        "dark": "#c51162",
                                                                        "light": "#ff4081",
                                                                        "main": "#f50057",
                                                                      },
                                                                      "text": Object {
                                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                        "hint": "rgba(0, 0, 0, 0.38)",
                                                                        "icon": "rgba(0, 0, 0, 0.38)",
                                                                        "lightDivider": "rgba(0, 0, 0, 0.075)",
                                                                        "primary": "rgba(0, 0, 0, 0.87)",
                                                                        "secondary": "rgba(0, 0, 0, 0.54)",
                                                                      },
                                                                      "type": "light",
                                                                      "types": Object {
                                                                        "dark": Object {
                                                                          "action": Object {
                                                                            "active": "rgba(255, 255, 255, 1)",
                                                                            "disabled": "rgba(255, 255, 255, 0.3)",
                                                                          },
                                                                          "background": Object {
                                                                            "appBar": "#212121",
                                                                            "avatar": "#757575",
                                                                            "chip": "#616161",
                                                                            "contentFrame": "#212121",
                                                                            "default": "#303030",
                                                                            "paper": "#424242",
                                                                          },
                                                                          "input": Object {
                                                                            "bottomLine": "rgba(255, 255, 255, 0.7)",
                                                                            "disabled": "rgba(255, 255, 255, 0.5)",
                                                                            "helperText": "rgba(255, 255, 255, 0.7)",
                                                                            "inputText": "rgba(255, 255, 255, 1)",
                                                                            "labelText": "rgba(255, 255, 255, 0.7)",
                                                                          },
                                                                          "line": Object {
                                                                            "stepper": "#757575",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(255, 255, 255, 0.5)",
                                                                            "divider": "rgba(255, 255, 255, 0.12)",
                                                                            "hint": "rgba(255, 255, 255, 0.5)",
                                                                            "icon": "rgba(255, 255, 255, 0.5)",
                                                                            "lightDivider": "rgba(255, 255, 255, 0.075)",
                                                                            "primary": "rgba(255, 255, 255, 1)",
                                                                            "secondary": "rgba(255, 255, 255, 0.7)",
                                                                          },
                                                                        },
                                                                        "light": Object {
                                                                          "action": Object {
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                          },
                                                                          "background": Object {
                                                                            "appBar": "#f5f5f5",
                                                                            "avatar": "#bdbdbd",
                                                                            "chip": "#e0e0e0",
                                                                            "contentFrame": "#eeeeee",
                                                                            "default": "#fafafa",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "input": Object {
                                                                            "bottomLine": "rgba(0, 0, 0, 0.42)",
                                                                            "disabled": "rgba(0, 0, 0, 0.42)",
                                                                            "helperText": "rgba(0, 0, 0, 0.54)",
                                                                            "inputText": "rgba(0, 0, 0, 0.87)",
                                                                            "labelText": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                          "line": Object {
                                                                            "stepper": "#bdbdbd",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "divider": "rgba(0, 0, 0, 0.12)",
                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                            "icon": "rgba(0, 0, 0, 0.38)",
                                                                            "lightDivider": "rgba(0, 0, 0, 0.075)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                          },
                                                                        },
                                                                      },
                                                                    },
                                                                    "shadows": Array [
                                                                      "none",
                                                                      "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                                                      "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                                                      "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                                                      "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                                                      "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                                                      "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                                                      "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                                                      "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                                                      "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                                                      "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                                                      "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                                                      "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                                                      "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                                                      "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                                                      "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                                                      "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                                                      "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                                                      "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                                                      "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                                                      "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                                                      "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                                                      "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                                                      "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                                                      "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                                                    ],
                                                                    "spacing": Object {
                                                                      "unit": 8,
                                                                    },
                                                                    "transitions": Object {
                                                                      "create": [Function],
                                                                      "duration": Object {
                                                                        "complex": 375,
                                                                        "enteringScreen": 225,
                                                                        "leavingScreen": 195,
                                                                        "short": 250,
                                                                        "shorter": 200,
                                                                        "shortest": 150,
                                                                        "standard": 300,
                                                                      },
                                                                      "easing": Object {
                                                                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                      },
                                                                      "getAutoHeightDuration": [Function],
                                                                    },
                                                                    "typography": Object {
                                                                      "body1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.46429em",
                                                                      },
                                                                      "body2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.71429em",
                                                                      },
                                                                      "button": Object {
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.875rem",
                                                                        "fontWeight": 500,
                                                                        "textTransform": "uppercase",
                                                                      },
                                                                      "caption": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "0.75rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.375em",
                                                                      },
                                                                      "display1": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.20588em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "display2": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "2.8125rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.06667em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "display3": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "3.5rem",
                                                                        "fontWeight": 400,
                                                                        "letterSpacing": "-.02em",
                                                                        "lineHeight": "1.30357em",
                                                                        "marginLeft": "-.04em",
                                                                      },
                                                                      "display4": Object {
                                                                        "color": "rgba(0, 0, 0, 0.54)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "7rem",
                                                                        "fontWeight": 300,
                                                                        "letterSpacing": "-.04em",
                                                                        "lineHeight": "1.14286em",
                                                                        "marginLeft": "-.06em",
                                                                      },
                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                      "fontSize": 14,
                                                                      "fontWeightLight": 300,
                                                                      "fontWeightMedium": 500,
                                                                      "fontWeightRegular": 400,
                                                                      "headline": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.5rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.35417em",
                                                                      },
                                                                      "pxToRem": [Function],
                                                                      "round": [Function],
                                                                      "subheading": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1rem",
                                                                        "fontWeight": 400,
                                                                        "lineHeight": "1.5em",
                                                                      },
                                                                      "title": Object {
                                                                        "color": "rgba(0, 0, 0, 0.87)",
                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                        "fontSize": "1.3125rem",
                                                                        "fontWeight": 500,
                                                                        "lineHeight": "1.16667em",
                                                                      },
                                                                    },
                                                                    "zIndex": Object {
                                                                      "appBar": 1100,
                                                                      "drawer": 1200,
                                                                      "mobileStepper": 1000,
                                                                      "modal": 1300,
                                                                      "snackbar": 1400,
                                                                      "tooltip": 1500,
                                                                    },
                                                                  }
                                                                }
                                                                transitionDuration="auto"
                                                              >
                                                                <WithStyles(Popover)
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper-155",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  anchorEl={null}
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-"
                                                                  onClose={[Function]}
                                                                  onEnter={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <Popover
                                                                    PaperProps={
                                                                      Object {
                                                                        "classes": Object {
                                                                          "root": "MuiMenu-paper-155",
                                                                        },
                                                                        "style": Object {
                                                                          "minWidth": undefined,
                                                                        },
                                                                      }
                                                                    }
                                                                    anchorEl={null}
                                                                    anchorOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    anchorReference="anchorEl"
                                                                    classes={
                                                                      Object {
                                                                        "paper": "MuiPopover-paper-156",
                                                                      }
                                                                    }
                                                                    elevation={8}
                                                                    getContentAnchorEl={[Function]}
                                                                    id="menu-"
                                                                    marginThreshold={16}
                                                                    onClose={[Function]}
                                                                    onEnter={[Function]}
                                                                    open={false}
                                                                    transformOrigin={
                                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                                    }
                                                                    transition={[Function]}
                                                                    transitionDuration="auto"
                                                                  >
                                                                    <WithStyles(Modal)
                                                                      BackdropProps={
                                                                        Object {
                                                                          "invisible": true,
                                                                        }
                                                                      }
                                                                      id="menu-"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <Modal
                                                                        BackdropComponent={[Function]}
                                                                        BackdropProps={
                                                                          Object {
                                                                            "invisible": true,
                                                                          }
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "hidden": "MuiModal-hidden-69",
                                                                            "root": "MuiModal-root-68",
                                                                          }
                                                                        }
                                                                        disableAutoFocus={false}
                                                                        disableBackdropClick={false}
                                                                        disableEnforceFocus={false}
                                                                        disableEscapeKeyDown={false}
                                                                        disableRestoreFocus={false}
                                                                        hideBackdrop={false}
                                                                        id="menu-"
                                                                        keepMounted={false}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": Array [],
                                                                            "data": Array [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": Array [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      />
                                                                    </WithStyles(Modal)>
                                                                  </Popover>
                                                                </WithStyles(Popover)>
                                                              </Menu>
                                                            </WithStyles(Menu)>
                                                          </div>
                                                        </SelectInput>
                                                      </div>
                                                    </Input>
                                                  </WithStyles(Input)>
                                                </Select>
                                              </WithStyles(Select)>
                                              <WithStyles(Typography)
                                                className="MuiTablePagination-caption-127"
                                                type="caption"
                                              >
                                                <Typography
                                                  align="inherit"
                                                  className="MuiTablePagination-caption-127"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter-97",
                                                      "alignJustify": "MuiTypography-alignJustify-99",
                                                      "alignLeft": "MuiTypography-alignLeft-96",
                                                      "alignRight": "MuiTypography-alignRight-98",
                                                      "body1": "MuiTypography-body1-93",
                                                      "body2": "MuiTypography-body2-92",
                                                      "button": "MuiTypography-button-95",
                                                      "caption": "MuiTypography-caption-94",
                                                      "colorAccent": "MuiTypography-colorAccent-106",
                                                      "colorError": "MuiTypography-colorError-107",
                                                      "colorInherit": "MuiTypography-colorInherit-103",
                                                      "colorPrimary": "MuiTypography-colorPrimary-104",
                                                      "colorSecondary": "MuiTypography-colorSecondary-105",
                                                      "display1": "MuiTypography-display1-88",
                                                      "display2": "MuiTypography-display2-87",
                                                      "display3": "MuiTypography-display3-86",
                                                      "display4": "MuiTypography-display4-85",
                                                      "gutterBottom": "MuiTypography-gutterBottom-101",
                                                      "headline": "MuiTypography-headline-89",
                                                      "noWrap": "MuiTypography-noWrap-100",
                                                      "paragraph": "MuiTypography-paragraph-102",
                                                      "root": "MuiTypography-root-84",
                                                      "subheading": "MuiTypography-subheading-91",
                                                      "title": "MuiTypography-title-90",
                                                    }
                                                  }
                                                  color="default"
                                                  gutterBottom={false}
                                                  headlineMapping={
                                                    Object {
                                                      "body1": "p",
                                                      "body2": "aside",
                                                      "display1": "h1",
                                                      "display2": "h1",
                                                      "display3": "h1",
                                                      "display4": "h1",
                                                      "headline": "h1",
                                                      "subheading": "h3",
                                                      "title": "h2",
                                                    }
                                                  }
                                                  noWrap={false}
                                                  paragraph={false}
                                                  type="caption"
                                                >
                                                  <span
                                                    className="MuiTypography-root-84 MuiTypography-caption-94 MuiTablePagination-caption-127"
                                                  >
                                                    1-5 of 10
                                                  </span>
                                                </Typography>
                                              </WithStyles(Typography)>
                                              <WithStyles(TablePaginationActions)
                                                backIconButtonProps={
                                                  Object {
                                                    "aria-label": "Previous Page",
                                                  }
                                                }
                                                count={10}
                                                nextIconButtonProps={
                                                  Object {
                                                    "aria-label": "Next Page",
                                                  }
                                                }
                                                onChangePage={[Function]}
                                                page={0}
                                                rowsPerPage={5}
                                              >
                                                <TablePaginationActions
                                                  backIconButtonProps={
                                                    Object {
                                                      "aria-label": "Previous Page",
                                                    }
                                                  }
                                                  classes={
                                                    Object {
                                                      "root": "MuiTablePaginationActions-root-157",
                                                    }
                                                  }
                                                  count={10}
                                                  nextIconButtonProps={
                                                    Object {
                                                      "aria-label": "Next Page",
                                                    }
                                                  }
                                                  onChangePage={[Function]}
                                                  page={0}
                                                  rowsPerPage={5}
                                                  theme={
                                                    Object {
                                                      "breakpoints": Object {
                                                        "between": [Function],
                                                        "down": [Function],
                                                        "keys": Array [
                                                          "xs",
                                                          "sm",
                                                          "md",
                                                          "lg",
                                                          "xl",
                                                        ],
                                                        "only": [Function],
                                                        "up": [Function],
                                                        "values": Object {
                                                          "lg": 1280,
                                                          "md": 960,
                                                          "sm": 600,
                                                          "xl": 1920,
                                                          "xs": 0,
                                                        },
                                                        "width": [Function],
                                                      },
                                                      "direction": "ltr",
                                                      "mixins": Object {
                                                        "gutters": [Function],
                                                        "toolbar": Object {
                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                            "minHeight": 48,
                                                          },
                                                          "@media (min-width:600px)": Object {
                                                            "minHeight": 64,
                                                          },
                                                          "minHeight": 56,
                                                        },
                                                      },
                                                      "palette": Object {
                                                        "action": Object {
                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                        },
                                                        "background": Object {
                                                          "appBar": "#f5f5f5",
                                                          "avatar": "#bdbdbd",
                                                          "chip": "#e0e0e0",
                                                          "contentFrame": "#eeeeee",
                                                          "default": "#fafafa",
                                                          "paper": "#fff",
                                                        },
                                                        "common": Object {
                                                          "black": "#000",
                                                          "darkBlack": "rgba(0, 0, 0, 0.87)",
                                                          "darkWhite": "rgba(255, 255, 255, 0.87)",
                                                          "faintBlack": "rgba(0, 0, 0, 0.12)",
                                                          "fullBlack": "rgba(0, 0, 0, 1)",
                                                          "fullWhite": "rgba(255, 255, 255, 1)",
                                                          "lightBlack": "rgba(0, 0, 0, 0.54)",
                                                          "lightWhite": "rgba(255, 255, 255, 0.54)",
                                                          "minBlack": "rgba(0, 0, 0, 0.26)",
                                                          "transparent": "rgba(0, 0, 0, 0)",
                                                          "white": "#fff",
                                                        },
                                                        "contrastThreshold": 3,
                                                        "error": Object {
                                                          "main": "#f44336",
                                                        },
                                                        "getContrastText": [Function],
                                                        "grey": Object {
                                                          "100": "#f5f5f5",
                                                          "200": "#eeeeee",
                                                          "300": "#e0e0e0",
                                                          "400": "#bdbdbd",
                                                          "50": "#fafafa",
                                                          "500": "#9e9e9e",
                                                          "600": "#757575",
                                                          "700": "#616161",
                                                          "800": "#424242",
                                                          "900": "#212121",
                                                          "A100": "#d5d5d5",
                                                          "A200": "#aaaaaa",
                                                          "A400": "#303030",
                                                          "A700": "#616161",
                                                        },
                                                        "input": Object {
                                                          "bottomLine": "rgba(0, 0, 0, 0.42)",
                                                          "disabled": "rgba(0, 0, 0, 0.42)",
                                                          "helperText": "rgba(0, 0, 0, 0.54)",
                                                          "inputText": "rgba(0, 0, 0, 0.87)",
                                                          "labelText": "rgba(0, 0, 0, 0.54)",
                                                        },
                                                        "line": Object {
                                                          "stepper": "#bdbdbd",
                                                        },
                                                        "primary": Object {
                                                          "contrastText": "rgba(255, 255, 255, 1)",
                                                          "dark": "#303f9f",
                                                          "light": "#7986cb",
                                                          "main": "#3f51b5",
                                                        },
                                                        "secondary": Object {
                                                          "contrastText": "rgba(255, 255, 255, 1)",
                                                          "dark": "#c51162",
                                                          "light": "#ff4081",
                                                          "main": "#f50057",
                                                        },
                                                        "text": Object {
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                          "icon": "rgba(0, 0, 0, 0.38)",
                                                          "lightDivider": "rgba(0, 0, 0, 0.075)",
                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                        },
                                                        "type": "light",
                                                        "types": Object {
                                                          "dark": Object {
                                                            "action": Object {
                                                              "active": "rgba(255, 255, 255, 1)",
                                                              "disabled": "rgba(255, 255, 255, 0.3)",
                                                            },
                                                            "background": Object {
                                                              "appBar": "#212121",
                                                              "avatar": "#757575",
                                                              "chip": "#616161",
                                                              "contentFrame": "#212121",
                                                              "default": "#303030",
                                                              "paper": "#424242",
                                                            },
                                                            "input": Object {
                                                              "bottomLine": "rgba(255, 255, 255, 0.7)",
                                                              "disabled": "rgba(255, 255, 255, 0.5)",
                                                              "helperText": "rgba(255, 255, 255, 0.7)",
                                                              "inputText": "rgba(255, 255, 255, 1)",
                                                              "labelText": "rgba(255, 255, 255, 0.7)",
                                                            },
                                                            "line": Object {
                                                              "stepper": "#757575",
                                                            },
                                                            "text": Object {
                                                              "disabled": "rgba(255, 255, 255, 0.5)",
                                                              "divider": "rgba(255, 255, 255, 0.12)",
                                                              "hint": "rgba(255, 255, 255, 0.5)",
                                                              "icon": "rgba(255, 255, 255, 0.5)",
                                                              "lightDivider": "rgba(255, 255, 255, 0.075)",
                                                              "primary": "rgba(255, 255, 255, 1)",
                                                              "secondary": "rgba(255, 255, 255, 0.7)",
                                                            },
                                                          },
                                                          "light": Object {
                                                            "action": Object {
                                                              "active": "rgba(0, 0, 0, 0.54)",
                                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                                            },
                                                            "background": Object {
                                                              "appBar": "#f5f5f5",
                                                              "avatar": "#bdbdbd",
                                                              "chip": "#e0e0e0",
                                                              "contentFrame": "#eeeeee",
                                                              "default": "#fafafa",
                                                              "paper": "#fff",
                                                            },
                                                            "input": Object {
                                                              "bottomLine": "rgba(0, 0, 0, 0.42)",
                                                              "disabled": "rgba(0, 0, 0, 0.42)",
                                                              "helperText": "rgba(0, 0, 0, 0.54)",
                                                              "inputText": "rgba(0, 0, 0, 0.87)",
                                                              "labelText": "rgba(0, 0, 0, 0.54)",
                                                            },
                                                            "line": Object {
                                                              "stepper": "#bdbdbd",
                                                            },
                                                            "text": Object {
                                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                                              "divider": "rgba(0, 0, 0, 0.12)",
                                                              "hint": "rgba(0, 0, 0, 0.38)",
                                                              "icon": "rgba(0, 0, 0, 0.38)",
                                                              "lightDivider": "rgba(0, 0, 0, 0.075)",
                                                              "primary": "rgba(0, 0, 0, 0.87)",
                                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                                            },
                                                          },
                                                        },
                                                      },
                                                      "shadows": Array [
                                                        "none",
                                                        "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                                        "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                                        "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                                        "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                                        "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                                        "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                                        "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                                        "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                                        "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                                        "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                                        "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                                        "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                                        "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                                        "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                                        "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                                        "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                                        "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                                        "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                                        "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                                        "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                                        "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                                        "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                                        "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                                        "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                                      ],
                                                      "spacing": Object {
                                                        "unit": 8,
                                                      },
                                                      "transitions": Object {
                                                        "create": [Function],
                                                        "duration": Object {
                                                          "complex": 375,
                                                          "enteringScreen": 225,
                                                          "leavingScreen": 195,
                                                          "short": 250,
                                                          "shorter": 200,
                                                          "shortest": 150,
                                                          "standard": 300,
                                                        },
                                                        "easing": Object {
                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                        },
                                                        "getAutoHeightDuration": [Function],
                                                      },
                                                      "typography": Object {
                                                        "body1": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.46429em",
                                                        },
                                                        "body2": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.71429em",
                                                        },
                                                        "button": Object {
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.875rem",
                                                          "fontWeight": 500,
                                                          "textTransform": "uppercase",
                                                        },
                                                        "caption": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "0.75rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.375em",
                                                        },
                                                        "display1": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.20588em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "display2": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "2.8125rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.06667em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "display3": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "3.5rem",
                                                          "fontWeight": 400,
                                                          "letterSpacing": "-.02em",
                                                          "lineHeight": "1.30357em",
                                                          "marginLeft": "-.04em",
                                                        },
                                                        "display4": Object {
                                                          "color": "rgba(0, 0, 0, 0.54)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "7rem",
                                                          "fontWeight": 300,
                                                          "letterSpacing": "-.04em",
                                                          "lineHeight": "1.14286em",
                                                          "marginLeft": "-.06em",
                                                        },
                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                        "fontSize": 14,
                                                        "fontWeightLight": 300,
                                                        "fontWeightMedium": 500,
                                                        "fontWeightRegular": 400,
                                                        "headline": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.5rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.35417em",
                                                        },
                                                        "pxToRem": [Function],
                                                        "round": [Function],
                                                        "subheading": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1rem",
                                                          "fontWeight": 400,
                                                          "lineHeight": "1.5em",
                                                        },
                                                        "title": Object {
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                          "fontSize": "1.3125rem",
                                                          "fontWeight": 500,
                                                          "lineHeight": "1.16667em",
                                                        },
                                                      },
                                                      "zIndex": Object {
                                                        "appBar": 1100,
                                                        "drawer": 1200,
                                                        "mobileStepper": 1000,
                                                        "modal": 1300,
                                                        "snackbar": 1400,
                                                        "tooltip": 1500,
                                                      },
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiTablePaginationActions-root-157"
                                                  >
                                                    <WithStyles(IconButton)
                                                      aria-label="Previous Page"
                                                      disabled={true}
                                                      onClick={[Function]}
                                                    >
                                                      <IconButton
                                                        aria-label="Previous Page"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                                            "disabled": "MuiIconButton-disabled-113",
                                                            "icon": "MuiIconButton-icon-115",
                                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                                            "label": "MuiIconButton-label-114",
                                                            "root": "MuiIconButton-root-108",
                                                          }
                                                        }
                                                        color="default"
                                                        disableRipple={false}
                                                        disabled={true}
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ButtonBase)
                                                          aria-label="Previous Page"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root-108 MuiIconButton-disabled-113"
                                                          disableRipple={false}
                                                          disabled={true}
                                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                                          onClick={[Function]}
                                                        >
                                                          <ButtonBase
                                                            aria-label="Previous Page"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root-108 MuiIconButton-disabled-113"
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiButtonBase-disabled-49",
                                                                "root": "MuiButtonBase-root-48",
                                                              }
                                                            }
                                                            disableRipple={false}
                                                            disabled={true}
                                                            focusRipple={false}
                                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                            type="button"
                                                          >
                                                            <button
                                                              aria-label="Previous Page"
                                                              className="MuiButtonBase-root-48 MuiButtonBase-disabled-49 MuiIconButton-root-108 MuiIconButton-disabled-113"
                                                              disabled={true}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={-1}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label-114"
                                                              >
                                                                <pure(KeyboardArrowLeft)
                                                                  className="MuiIconButton-icon-115"
                                                                >
                                                                  <KeyboardArrowLeft
                                                                    className="MuiIconButton-icon-115"
                                                                  >
                                                                    <WithStyles(SvgIcon)
                                                                      className="MuiIconButton-icon-115"
                                                                    >
                                                                      <SvgIcon
                                                                        className="MuiIconButton-icon-115"
                                                                        classes={
                                                                          Object {
                                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                                            "root": "MuiSvgIcon-root-117",
                                                                          }
                                                                        }
                                                                        color="inherit"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                          />
                                                                        </svg>
                                                                      </SvgIcon>
                                                                    </WithStyles(SvgIcon)>
                                                                  </KeyboardArrowLeft>
                                                                </pure(KeyboardArrowLeft)>
                                                              </span>
                                                            </button>
                                                          </ButtonBase>
                                                        </WithStyles(ButtonBase)>
                                                      </IconButton>
                                                    </WithStyles(IconButton)>
                                                    <WithStyles(IconButton)
                                                      aria-label="Next Page"
                                                      disabled={false}
                                                      onClick={[Function]}
                                                    >
                                                      <IconButton
                                                        aria-label="Next Page"
                                                        classes={
                                                          Object {
                                                            "colorAccent": "MuiIconButton-colorAccent-109",
                                                            "colorContrast": "MuiIconButton-colorContrast-110",
                                                            "colorInherit": "MuiIconButton-colorInherit-112",
                                                            "colorPrimary": "MuiIconButton-colorPrimary-111",
                                                            "disabled": "MuiIconButton-disabled-113",
                                                            "icon": "MuiIconButton-icon-115",
                                                            "keyboardFocused": "MuiIconButton-keyboardFocused-116",
                                                            "label": "MuiIconButton-label-114",
                                                            "root": "MuiIconButton-root-108",
                                                          }
                                                        }
                                                        color="default"
                                                        disableRipple={false}
                                                        disabled={false}
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ButtonBase)
                                                          aria-label="Next Page"
                                                          centerRipple={true}
                                                          className="MuiIconButton-root-108"
                                                          disableRipple={false}
                                                          disabled={false}
                                                          keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                                          onClick={[Function]}
                                                        >
                                                          <ButtonBase
                                                            aria-label="Next Page"
                                                            centerRipple={true}
                                                            className="MuiIconButton-root-108"
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiButtonBase-disabled-49",
                                                                "root": "MuiButtonBase-root-48",
                                                              }
                                                            }
                                                            disableRipple={false}
                                                            disabled={false}
                                                            focusRipple={false}
                                                            keyboardFocusedClassName="MuiIconButton-keyboardFocused-116"
                                                            onClick={[Function]}
                                                            tabIndex={0}
                                                            type="button"
                                                          >
                                                            <button
                                                              aria-label="Next Page"
                                                              className="MuiButtonBase-root-48 MuiIconButton-root-108"
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              role="button"
                                                              tabIndex={0}
                                                              type="button"
                                                            >
                                                              <span
                                                                className="MuiIconButton-label-114"
                                                              >
                                                                <pure(KeyboardArrowRight)
                                                                  className="MuiIconButton-icon-115"
                                                                >
                                                                  <KeyboardArrowRight
                                                                    className="MuiIconButton-icon-115"
                                                                  >
                                                                    <WithStyles(SvgIcon)
                                                                      className="MuiIconButton-icon-115"
                                                                    >
                                                                      <SvgIcon
                                                                        className="MuiIconButton-icon-115"
                                                                        classes={
                                                                          Object {
                                                                            "colorAccent": "MuiSvgIcon-colorAccent-118",
                                                                            "colorAction": "MuiSvgIcon-colorAction-119",
                                                                            "colorContrast": "MuiSvgIcon-colorContrast-120",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                                                            "colorError": "MuiSvgIcon-colorError-122",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary-123",
                                                                            "root": "MuiSvgIcon-root-117",
                                                                          }
                                                                        }
                                                                        color="inherit"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className="MuiSvgIcon-root-117 MuiIconButton-icon-115"
                                                                          focusable="false"
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                          />
                                                                        </svg>
                                                                      </SvgIcon>
                                                                    </WithStyles(SvgIcon)>
                                                                  </KeyboardArrowRight>
                                                                </pure(KeyboardArrowRight)>
                                                              </span>
                                                              <WithStyles(TouchRipple)
                                                                center={true}
                                                                innerRef={[Function]}
                                                              >
                                                                <TouchRipple
                                                                  center={true}
                                                                  classes={
                                                                    Object {
                                                                      "ripple": "MuiTouchRipple-ripple-54",
                                                                      "rippleFast": "MuiTouchRipple-rippleFast-56",
                                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-55",
                                                                      "root": "MuiTouchRipple-root-50",
                                                                      "wrapper": "MuiTouchRipple-wrapper-51",
                                                                      "wrapperLeaving": "MuiTouchRipple-wrapperLeaving-52",
                                                                      "wrapperPulsating": "MuiTouchRipple-wrapperPulsating-53",
                                                                    }
                                                                  }
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    className="MuiTouchRipple-root-50"
                                                                    component="span"
                                                                    enter={true}
                                                                    exit={true}
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root-50"
                                                                    />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </button>
                                                          </ButtonBase>
                                                        </WithStyles(ButtonBase)>
                                                      </IconButton>
                                                    </WithStyles(IconButton)>
                                                  </div>
                                                </TablePaginationActions>
                                              </WithStyles(TablePaginationActions)>
                                            </div>
                                          </Toolbar>
                                        </WithStyles(Toolbar)>
                                      </td>
                                    </TableCell>
                                  </WithStyles(TableCell)>
                                </TablePagination>
                              </WithStyles(TablePagination)>
                            </tr>
                          </TableRow>
                        </WithStyles(TableRow)>
                      </tfoot>
                    </TableFooter>
                  </table>
                </Table>
              </WithStyles(Table)>
            </Component>
          </div>
        </Paper>
      </WithStyles(Paper)>
    </MerchantTable>
  </Connect(MerchantTable)>
</WithStyles(Connect(MerchantTable))>
`;
